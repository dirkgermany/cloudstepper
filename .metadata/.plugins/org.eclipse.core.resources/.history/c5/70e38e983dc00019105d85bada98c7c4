package com.dam.authentication.model;

import java.util.List;
import java.util.Optional;

import javax.transaction.Transactional;

import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.data.repository.Repository;
import org.springframework.data.repository.query.Param;

import com.dam.authentication.model.entity.Permission;

@Transactional
public interface PermissionModel extends Repository<Permission, Long>, CrudRepository<Permission, Long> {

//	List<User> findByUserName(String userName);
	Optional<Permission> findByUserId(Long userId);
//	List<User> findByClientId(int clientId);

	@Query("SELECT permission FROM Permission permission where permission.givenName = :givenName "
			+ "AND permission.lastName = :lastName")
	List<Permission> getPersonByNames(@Param("givenName") String givenName, @Param("lastName") String lastName);
//	
//	@Query("SELECT pers FROM PersonEntity pers where pers.clientId = :clientId "
//			+ "AND UPPER(pers.foreName) = UPPER(:foreName) "
//			+ "AND UPPER(pers.surName) = UPPER(:surName)")
//	PersonEntity findPersonByNames(@Param("clientId") int clientId, @Param("foreName") String foreName, @Param("surName") String surName);
	
	@Modifying
	@Transactional
	@Query("Update Permission permission set "
	        + "permission.userId = :#{#permission.userId}, "
	        + "permission.givenName = :#{#permission.givenName}, "
	        + "permission.role = :#{#permission.role}, "
	        + "permission.gender = :#{#permission.gender}, "
			+ "permission.lastName = :#{#permission.lastName} "
			+ "Where permission.personId = :#{#permission.personId} ")
	Integer updatePerson(@Param("permission") Permission permission);
}
