package photocrm.endpoint;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ws.server.endpoint.annotation.Endpoint;
import org.springframework.ws.server.endpoint.annotation.PayloadRoot;
import org.springframework.ws.server.endpoint.annotation.RequestPayload;
import org.springframework.ws.server.endpoint.annotation.ResponsePayload;

import photocrm.exception.ServiceException;
import photocrm.meta.WebClientLayer;
import services.photocrm.soap_soap_service.AddPersonToOrganizationRequest;
import services.photocrm.soap_soap_service.AddPersonToOrganizationResponse;
import services.photocrm.soap_soap_service.CreateOrganizationRequest;
import services.photocrm.soap_soap_service.CreateOrganizationResponse;
import services.photocrm.soap_soap_service.DropOrganizationRequest;
import services.photocrm.soap_soap_service.DropOrganizationResponse;
import services.photocrm.soap_soap_service.FindOrganizationRequest;
import services.photocrm.soap_soap_service.FindOrganizationResponse;
import services.photocrm.soap_soap_service.FindPersonsByOrganizationRequest;
import services.photocrm.soap_soap_service.FindPersonsByOrganizationResponse;
import services.photocrm.soap_soap_service.ModifyOrganizationRequest;
import services.photocrm.soap_soap_service.ModifyOrganizationResponse;



@Endpoint
public class OrganizationDomainEndpoint {
	private static final String NAMESPACE_URI = "http://photocrm.services/soap-soap-service";	
	
	@Autowired
	private WebClientLayer webClientLayer;
	
	// Organization related Endpoints

	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "createOrganizationRequest")
	@ResponsePayload
	public CreateOrganizationResponse createOrganization(@RequestPayload CreateOrganizationRequest request) throws ServiceException{	
		return webClientLayer.createOrganization(request);
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "findOrganizationRequest")
	@ResponsePayload
	public FindOrganizationResponse findOrganization(@RequestPayload FindOrganizationRequest request) throws ServiceException{	
		return webClientLayer.findOrganization(request);
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "dropOrganizationRequest")
	@ResponsePayload
	public DropOrganizationResponse dropOrganization(@RequestPayload DropOrganizationRequest request) throws ServiceException{	
		return webClientLayer.dropOrganization(request);
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "modifyOrganizationRequest")
	@ResponsePayload
	public ModifyOrganizationResponse modifyOrganization(@RequestPayload ModifyOrganizationRequest request) throws ServiceException{	
		return webClientLayer.modifyOrganization(request);
	}
	
	
	// Person related Endpoints
	
	// In das XSD die Web-Methode f√ºr das Finden der Personenliste... FindPersonsByOrganization
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "findPersonsByParentRequest")
	@ResponsePayload
	public FindPersonsByOrganizationResponse findPersonsByOrganization(@RequestPayload FindPersonsByOrganizationRequest request) throws ServiceException{	
		return webClientLayer.findPersonsByOrganization(request);
	}

	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "addPersonToOrganizationRequest")
	@ResponsePayload
	public AddPersonToOrganizationResponse addPersonToOrganization(@RequestPayload AddPersonToOrganizationRequest request) throws ServiceException{	
		return webClientLayer.addPersonToOrganization(request);
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "createPersonRequest")
	@ResponsePayload
	public CreateOrganizationResponse createPerson(@RequestPayload CreatePersonRequest request) throws ServiceException{	
		return webClientLayer.createPerson(request);
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "findPersonRequest")
	@ResponsePayload
	public FindPersonResponse findPerson(@RequestPayload FindPersonRequest request) throws ServiceException{	
		return webClientLayer.findPerson(request);
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "dropPersonRequest")
	@ResponsePayload
	public DropPersonResponse dropPerson(@RequestPayload DropPersonRequest request) throws ServiceException{	
		return webClientLayer.dropPerson(request);
	}
	
	@PayloadRoot(namespace = NAMESPACE_URI, localPart = "modifyPersonRequest")
	@ResponsePayload
	public ModifyPersonResponse modifyPerson(@RequestPayload ModifyPersonRequest request) throws ServiceException{	
		return webClientLayer.modifyPerson(request);
	}
	

	
}