package photocrm.model;

import java.util.Optional;

import javax.transaction.Transactional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.stereotype.Controller;

import photocrm.exception.ServiceException;
import photocrm.exception.ServiceFault;

@Controller
@ComponentScan
public class OrganizationFacade {

	private static final Logger log = LoggerFactory.getLogger(OrganizationFacade.class);

	@Autowired
	private OrganizationModel organizationQueryModel;

	public OrganizationEntity insertOrganization(OrganizationEntity entityToInsert) {
		return organizationQueryModel.save(entityToInsert);
	}

	public OrganizationEntity getOrganizationById(int id) {
		OrganizationEntity organizationEntity = null;
		Optional<OrganizationEntity> optional = organizationQueryModel.findById(id);
		System.out.println("OPTIONAL : " + optional);
		if (optional.isPresent()) {
			organizationEntity = optional.get();
		}
		return organizationEntity;
	}

	public OrganizationEntity getOrganizationByClientAndId(int clientId, int id) {
		return organizationQueryModel.findOrganizationByClientAndId(clientId, id);
	}

	@Transactional
	public void deleteOrganization(OrganizationEntity entityToDelete) {
		organizationQueryModel.delete(entityToDelete);
	}

	@Transactional
	public OrganizationEntity updateOrganization(OrganizationEntity entityToUpdate) {
		OrganizationEntity updatedEntity = null;
		try {
			Integer updateCount = organizationQueryModel.updateOrganization(entityToUpdate);
			if (1 == updateCount) {
				updatedEntity = organizationQueryModel.findOrganizationByClientAndId(entityToUpdate.getClientId(),
						entityToUpdate.getId());
			}
		} catch (Exception ex) {
			log.error(ex.getMessage());
			throw new ServiceException(ex.getMessage(),
					new ServiceFault("EXCEPTION UPDATE ", "new Values: " + entityToUpdate));
		}

		if (null == updatedEntity) {
			throw new ServiceException("ERROR: Entity Update",
					new ServiceFault("ERROR UPDATE ", "updatedEntity is null; new Values: " + entityToUpdate));
		}

		return updatedEntity;
	}

}
