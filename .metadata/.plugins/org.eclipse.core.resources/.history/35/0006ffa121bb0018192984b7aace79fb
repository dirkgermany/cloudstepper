package photocrm.mapping;

import photocrm.model.OrganizationEntity;
import services.photocrm.entity_service_organization.InsertOrganizationRequest;
import services.photocrm.entity_service_organization.Organization;
import services.photocrm.entity_service_organization.OrganizationType;
import services.photocrm.entity_service_organization.OrganizationTypeXml;
import services.photocrm.entity_service_organization.OrganizationXml;
import services.photocrm.entity_service_organization.UpdateOrganizationRequest;

public class OrganizationMapper {
	
	public static OrganizationXml entityToXml (OrganizationEntity entity) {
		OrganizationXml organizationXml = new OrganizationXml();
		organizationXml.setOrganizationType(entity.getOrganizationType());
		organizationXml.setId(entity.getId());
		organizationXml.setClientId(entity.getClientId());
		organizationXml.setName(entity.getName());
		return organizationXml;
	}
	
	public static OrganizationEntity xmlToEntity (OrganizationXml xml) {
		OrganizationEntity entity = new OrganizationEntity();
		entity.setOrganizationType(xml.getOrganizationType());
		entity.setId(xml.getId());
		entity.setClientId(xml.getClientId());
		entity.setName(xml.getName());
		return entity;
	}
	
	public static OrganizationEntity requestToEntity (InsertOrganizationRequest request) {
		OrganizationEntity entity = new OrganizationEntity();
		entity.setName(request.getName());
		entity.setOrganizationType(OrganizationTypeXml.valueOf(request.getOrganizationTypeString()));
		entity.setClientId(request.getClientId());
		return entity;
	}

	public static OrganizationEntity requestToEntity (UpdateOrganizationRequest request) {
		OrganizationEntity entity = new OrganizationEntity();
		entity.setName(request.getName());
		entity.setOrganizationType(OrganizationTypeXml.valueOf(request.getOrganizationTypeString()));
		entity.setId(request.getId());
		entity.setClientId(request.getClientId());
		return entity;
	}

}
